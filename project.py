# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'project.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QLabel
import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QGraphicsScene, QGraphicsView, QStatusBar, QLabel
from PyQt5.QtCore import QPointF


class Ui_MainWindow(object):
    def __init__(self):
        super().__init__()
      
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1195, 758)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QStatusBar(MainWindow)
        MainWindow.setStatusBar(self.statusbar)
       
        self.FinalSolution = QtWidgets.QGroupBox(self.centralwidget)
        self.FinalSolution.setMinimumSize(QtCore.QSize(350, 300))
        self.FinalSolution.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.FinalSolution.setFont(font)
        self.FinalSolution.setObjectName("FinalSolution")
        self.saveFinal = QtWidgets.QPushButton(self.FinalSolution)
        self.saveFinal.setEnabled(False)
        self.saveFinal.setGeometry(QtCore.QRect(50, 30, 31, 31))
        self.saveFinal.setText("")
        self.saveFinal.setObjectName("saveFinal")
        self.exportAsFinal = QtWidgets.QPushButton(self.FinalSolution)
        self.exportAsFinal.setEnabled(False)
        self.exportAsFinal.setGeometry(QtCore.QRect(120, 30, 31, 31))
        self.exportAsFinal.setText("")
        self.exportAsFinal.setObjectName("exportAsFinal")
        self.undoFinal = QtWidgets.QPushButton(self.FinalSolution)
        self.undoFinal.setEnabled(False)
        self.undoFinal.setGeometry(QtCore.QRect(190, 30, 31, 31))
        self.undoFinal.setText("")
        self.undoFinal.setObjectName("undoFinal")
        self.redoFinal = QtWidgets.QPushButton(self.FinalSolution)
        self.redoFinal.setEnabled(False)
        self.redoFinal.setGeometry(QtCore.QRect(260, 30, 31, 31))
        self.redoFinal.setText("")
        self.redoFinal.setObjectName("redoFinal")
        self.clearFinal = QtWidgets.QPushButton(self.FinalSolution)
        self.clearFinal.setEnabled(False)
        self.clearFinal.setGeometry(QtCore.QRect(330, 30, 31, 31))
        self.clearFinal.setText("")
        self.clearFinal.setObjectName("clearFinal")
        self.finalGraph = QtWidgets.QWidget(self.FinalSolution)
        self.finalGraph.setGeometry(QtCore.QRect(20, 80, 381, 281))
        self.finalGraph.setMinimumSize(QtCore.QSize(371, 281))
        self.finalGraph.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.finalGraph.setObjectName("finalGraph")
        self.gridLayout.addWidget(self.FinalSolution, 0, 1, 2, 1)
        self.OptimizationAndClustering = QtWidgets.QGroupBox(self.centralwidget)
        self.OptimizationAndClustering.setMinimumSize(QtCore.QSize(300, 220))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.OptimizationAndClustering.setFont(font)
        self.OptimizationAndClustering.setObjectName("OptimizationAndClustering")
        self.Heuristic = QtWidgets.QGroupBox(self.OptimizationAndClustering)
        self.Heuristic.setGeometry(QtCore.QRect(10, 30, 321, 81))
        self.Heuristic.setObjectName("Heuristic")
        self.hillClimbing = QtWidgets.QPushButton(self.Heuristic)
        self.hillClimbing.setEnabled(False)
        self.hillClimbing.setGeometry(QtCore.QRect(90, 30, 31, 31))
        self.hillClimbing.setText("")
        self.hillClimbing.setObjectName("hillClimbing")
        self.simulatedAnneling = QtWidgets.QPushButton(self.Heuristic)
        self.simulatedAnneling.setEnabled(False)
        self.simulatedAnneling.setGeometry(QtCore.QRect(200, 30, 31, 31))
        self.simulatedAnneling.setText("")
        self.simulatedAnneling.setObjectName("simulatedAnneling")
        self.Clustering = QtWidgets.QGroupBox(self.OptimizationAndClustering)
        self.Clustering.setGeometry(QtCore.QRect(10, 120, 321, 81))
        self.Clustering.setObjectName("Clustering")
        self.kMeans = QtWidgets.QPushButton(self.Clustering)
        self.kMeans.setEnabled(False)
        self.kMeans.setGeometry(QtCore.QRect(20, 30, 31, 31))
        self.kMeans.setText("")
        self.kMeans.setObjectName("kMeans")
        self.affinityPropagation = QtWidgets.QPushButton(self.Clustering)
        self.affinityPropagation.setEnabled(False)
        self.affinityPropagation.setGeometry(QtCore.QRect(70, 30, 31, 31))
        self.affinityPropagation.setText("")
        self.affinityPropagation.setObjectName("affinityPropagation")
        self.meanShift = QtWidgets.QPushButton(self.Clustering)
        self.meanShift.setEnabled(False)
        self.meanShift.setGeometry(QtCore.QRect(120, 30, 31, 31))
        self.meanShift.setText("")
        self.meanShift.setObjectName("meanShift")
        self.hierarchicalClustering = QtWidgets.QPushButton(self.Clustering)
        self.hierarchicalClustering.setEnabled(False)
        self.hierarchicalClustering.setGeometry(QtCore.QRect(170, 30, 31, 31))
        self.hierarchicalClustering.setText("")
        self.hierarchicalClustering.setObjectName("hierarchicalClustering")
        self.DBSCAN = QtWidgets.QPushButton(self.Clustering)
        self.DBSCAN.setEnabled(False)
        self.DBSCAN.setGeometry(QtCore.QRect(220, 30, 31, 31))
        self.DBSCAN.setText("")
        self.DBSCAN.setObjectName("DBSCAN")
        self.spectralClustering = QtWidgets.QPushButton(self.Clustering)
        self.spectralClustering.setEnabled(False)
        self.spectralClustering.setGeometry(QtCore.QRect(270, 30, 31, 31))
        self.spectralClustering.setText("")
        self.spectralClustering.setObjectName("spectralClustering")
        self.gridLayout.addWidget(self.OptimizationAndClustering, 0, 2, 1, 1)
        self.manuelSolution = QtWidgets.QGroupBox(self.centralwidget)
        self.manuelSolution.setMinimumSize(QtCore.QSize(0, 313))
        self.manuelSolution.setMaximumSize(QtCore.QSize(340, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.manuelSolution.setFont(font)
        self.manuelSolution.setObjectName("manuelSolution")
        self.labelHubs = QtWidgets.QLabel(self.manuelSolution)
        self.labelHubs.setGeometry(QtCore.QRect(10, 30, 47, 13))
        self.labelHubs.setObjectName("labelHubs")
        self.hubs = QtWidgets.QTextEdit(self.manuelSolution)
        self.hubs.setGeometry(QtCore.QRect(10, 50, 321, 41))
        self.hubs.setObjectName("hubs")
        self.labelNodes = QtWidgets.QLabel(self.manuelSolution)
        self.labelNodes.setGeometry(QtCore.QRect(10, 100, 47, 13))
        self.labelNodes.setObjectName("labelNodes")
        self.nodes = QtWidgets.QTextEdit(self.manuelSolution)
        self.nodes.setGeometry(QtCore.QRect(10, 120, 321, 141))
        self.nodes.setObjectName("nodes")
        self.run = QtWidgets.QPushButton(self.manuelSolution)
        self.run.setEnabled(False)
        self.run.setGeometry(QtCore.QRect(10, 270, 311, 31))
        self.run.setObjectName("run")
        self.gridLayout.addWidget(self.manuelSolution, 1, 2, 2, 1)
        self.infoPanel = QtWidgets.QGroupBox(self.centralwidget)
        self.infoPanel.setMinimumSize(QtCore.QSize(1177, 154))
        self.infoPanel.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.infoPanel.setFont(font)
        self.infoPanel.setObjectName("infoPanel")
        self.textEditInfoPanel = QtWidgets.QTextEdit(self.infoPanel)
        self.textEditInfoPanel.setGeometry(QtCore.QRect(10, 30, 1131, 101))
        self.textEditInfoPanel.setMinimumSize(QtCore.QSize(1131, 101))
        self.textEditInfoPanel.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.textEditInfoPanel.setObjectName("textEditInfoPanel")
        self.gridLayout.addWidget(self.infoPanel, 3, 0, 1, 3)
        self.InitialSolution = QtWidgets.QGroupBox(self.centralwidget)
        self.InitialSolution.setMinimumSize(QtCore.QSize(350, 300))
        self.InitialSolution.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.InitialSolution.setFont(font)
        self.InitialSolution.setObjectName("InitialSolution")
        self.saveInitial = QtWidgets.QPushButton(self.InitialSolution)
        self.saveInitial.setEnabled(False)
        self.saveInitial.setGeometry(QtCore.QRect(100, 30, 31, 31))
        self.saveInitial.setText("")
        self.saveInitial.setObjectName("saveInitial")
        self.exportAsInitial = QtWidgets.QPushButton(self.InitialSolution)
        self.exportAsInitial.setEnabled(False)
        self.exportAsInitial.setGeometry(QtCore.QRect(160, 30, 31, 31))
        self.exportAsInitial.setText("")
        self.exportAsInitial.setObjectName("exportAsInitial")
        self.undoInitial = QtWidgets.QPushButton(self.InitialSolution)
        self.undoInitial.setEnabled(False)
        self.undoInitial.setGeometry(QtCore.QRect(220, 30, 31, 31))
        self.undoInitial.setText("")
        self.undoInitial.setObjectName("undoInitial")
        self.redoInitial = QtWidgets.QPushButton(self.InitialSolution)
        self.redoInitial.setEnabled(False)
        self.redoInitial.setGeometry(QtCore.QRect(280, 30, 31, 31))
        self.redoInitial.setText("")
        self.redoInitial.setObjectName("redoInitial")
        self.clearInitial = QtWidgets.QPushButton(self.InitialSolution)
        self.clearInitial.setEnabled(False)
        self.clearInitial.setGeometry(QtCore.QRect(340, 30, 31, 31))
        self.clearInitial.setText("")
        self.clearInitial.setObjectName("clearInitial")
        self.openData = QtWidgets.QPushButton(self.InitialSolution)
        self.openData.setGeometry(QtCore.QRect(40, 30, 31, 31))
        self.openData.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.openData.setText("")
        self.openData.setObjectName("openData")
        self.initialGraph = QtWidgets.QWidget(self.InitialSolution)
        self.initialGraph.setGeometry(QtCore.QRect(20, 80, 371, 281))
        self.initialGraph.setMinimumSize(QtCore.QSize(371, 281))
        self.initialGraph.setMouseTracking(True)
        self.initialGraph.setObjectName("initialGraph")
        self.gridLayout.addWidget(self.InitialSolution, 0, 0, 2, 1)
        self.results = QtWidgets.QGroupBox(self.centralwidget)
        self.results.setMinimumSize(QtCore.QSize(0, 153))
        self.results.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.results.setFont(font)
        self.results.setObjectName("results")
        self.textEdit = QtWidgets.QTextEdit(self.results)
        self.textEdit.setGeometry(QtCore.QRect(10, 20, 811, 121))
        self.textEdit.setMinimumSize(QtCore.QSize(811, 121))
        self.textEdit.setObjectName("textEditResults")
        self.gridLayout.addWidget(self.results, 2, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1195, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile_Menu = QtWidgets.QMenu(self.menubar)
        self.menuFile_Menu.setObjectName("menuFile_Menu")
        self.menuExportAs = QtWidgets.QMenu(self.menuFile_Menu)
        self.menuExportAs.setObjectName("menuExportAs")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuClear = QtWidgets.QMenu(self.menuEdit)
        self.menuClear.setObjectName("menuClear")
        self.menuUndo = QtWidgets.QMenu(self.menuEdit)
        self.menuUndo.setObjectName("menuUndo")
        self.menuRedo = QtWidgets.QMenu(self.menuEdit)
        self.menuRedo.setObjectName("menuRedo")
        self.menuClustering = QtWidgets.QMenu(self.menubar)
        self.menuClustering.setObjectName("menuClustering")
        self.menuHeuristics = QtWidgets.QMenu(self.menubar)
        self.menuHeuristics.setObjectName("menuHeuristics")
        MainWindow.setMenuBar(self.menubar)
        # self.statusbar = QtWidgets.QStatusBar(MainWindow)
        # self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpenData = QtWidgets.QAction(MainWindow)
        self.actionOpenData.setObjectName("actionOpenData")
        self.actionSaveInitialSolution = QtWidgets.QAction(MainWindow)
        self.actionSaveInitialSolution.setEnabled(False)
        self.actionSaveInitialSolution.setObjectName("actionSaveInitialSolution")
        self.actionSaveFinalSolution = QtWidgets.QAction(MainWindow)
        self.actionSaveFinalSolution.setEnabled(False)
        self.actionSaveFinalSolution.setObjectName("actionSaveFinalSolution")
        self.actionExportInitialSolution = QtWidgets.QAction(MainWindow)
        self.actionExportInitialSolution.setEnabled(False)
        self.actionExportInitialSolution.setObjectName("actionExportInitialSolution")
        self.actionExportFinalSolution = QtWidgets.QAction(MainWindow)
        self.actionExportFinalSolution.setEnabled(False)
        self.actionExportFinalSolution.setObjectName("actionExportFinalSolution")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionClearInitialSolution = QtWidgets.QAction(MainWindow)
        self.actionClearInitialSolution.setEnabled(False)
        self.actionClearInitialSolution.setObjectName("actionClearInitialSolution")
        self.actionClearFinalSolution = QtWidgets.QAction(MainWindow)
        self.actionClearFinalSolution.setEnabled(False)
        self.actionClearFinalSolution.setObjectName("actionClearFinalSolution")
        self.actionUndoInitial = QtWidgets.QAction(MainWindow)
        self.actionUndoInitial.setEnabled(False)
        self.actionUndoInitial.setObjectName("actionUndoInitial")
        self.actionUndoFinal = QtWidgets.QAction(MainWindow)
        self.actionUndoFinal.setEnabled(False)
        self.actionUndoFinal.setObjectName("actionUndoFinal")
        self.actionRedoInitial = QtWidgets.QAction(MainWindow)
        self.actionRedoInitial.setEnabled(False)
        self.actionRedoInitial.setObjectName("actionRedoInitial")
        self.actionRedoFinal = QtWidgets.QAction(MainWindow)
        self.actionRedoFinal.setEnabled(False)
        self.actionRedoFinal.setObjectName("actionRedoFinal")
        self.actionKMeans = QtWidgets.QAction(MainWindow)
        self.actionKMeans.setEnabled(False)
        self.actionKMeans.setObjectName("actionKMeans")
        self.actionAffinityPropagation = QtWidgets.QAction(MainWindow)
        self.actionAffinityPropagation.setEnabled(False)
        self.actionAffinityPropagation.setObjectName("actionAffinityPropagation")
        self.actionMeanShift = QtWidgets.QAction(MainWindow)
        self.actionMeanShift.setEnabled(False)
        self.actionMeanShift.setObjectName("actionMeanShift")
        self.actionSpectralClustering = QtWidgets.QAction(MainWindow)
        self.actionSpectralClustering.setEnabled(False)
        self.actionSpectralClustering.setObjectName("actionSpectralClustering")
        self.actionHierarchicalClustering = QtWidgets.QAction(MainWindow)
        self.actionHierarchicalClustering.setEnabled(False)
        self.actionHierarchicalClustering.setObjectName("actionHierarchicalClustering")
        self.actionDBSCAN = QtWidgets.QAction(MainWindow)
        self.actionDBSCAN.setEnabled(False)
        self.actionDBSCAN.setObjectName("actionDBSCAN")
        self.actionHillClimbing = QtWidgets.QAction(MainWindow)
        self.actionHillClimbing.setEnabled(False)
        self.actionHillClimbing.setObjectName("actionHillClimbing")
        self.actionSimulatedAnneling = QtWidgets.QAction(MainWindow)
        self.actionSimulatedAnneling.setEnabled(False)
        self.actionSimulatedAnneling.setObjectName("actionSimulatedAnneling")
        self.menuExportAs.addAction(self.actionExportInitialSolution)
        self.menuExportAs.addAction(self.actionExportFinalSolution)
        self.menuFile_Menu.addAction(self.actionOpenData)
        self.menuFile_Menu.addAction(self.actionSaveInitialSolution)
        self.menuFile_Menu.addAction(self.actionSaveFinalSolution)
        self.menuFile_Menu.addAction(self.menuExportAs.menuAction())
        self.menuFile_Menu.addAction(self.actionExit)
        self.menuClear.addAction(self.actionClearInitialSolution)
        self.menuClear.addAction(self.actionClearFinalSolution)
        self.menuUndo.addAction(self.actionUndoInitial)
        self.menuUndo.addAction(self.actionUndoFinal)
        self.menuRedo.addAction(self.actionRedoInitial)
        self.menuRedo.addAction(self.actionRedoFinal)
        self.menuEdit.addAction(self.menuClear.menuAction())
        self.menuEdit.addAction(self.menuUndo.menuAction())
        self.menuEdit.addAction(self.menuRedo.menuAction())
        self.menuClustering.addAction(self.actionKMeans)
        self.menuClustering.addAction(self.actionAffinityPropagation)
        self.menuClustering.addAction(self.actionMeanShift)
        self.menuClustering.addAction(self.actionSpectralClustering)
        self.menuClustering.addAction(self.actionHierarchicalClustering)
        self.menuClustering.addAction(self.actionDBSCAN)
        self.menuHeuristics.addAction(self.actionHillClimbing)
        self.menuHeuristics.addAction(self.actionSimulatedAnneling)
        self.menubar.addAction(self.menuFile_Menu.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuClustering.menuAction())
        self.menubar.addAction(self.menuHeuristics.menuAction())
        
        icon_save = MainWindow.style().standardIcon(QtWidgets.QStyle.SP_DialogSaveButton)
        self.actionSaveFinalSolution.setIcon(icon_save)
        self.actionSaveInitialSolution.setIcon(icon_save)
        self.saveFinal.setIcon(icon_save)
        self.saveInitial.setIcon(icon_save)
        self.actionSaveInitialSolution.triggered.connect(self.saveCoordinates)
        self.saveInitial.clicked.connect(self.saveCoordinates)
        self.actionSaveFinalSolution.triggered.connect(self.saveCoordinates)
        self.saveFinal.clicked.connect(self.saveCoordinates)
        

        icon_export = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\export.png")
        self.actionExportInitialSolution.setIcon(icon_export)
        self.actionExportFinalSolution.setIcon(icon_export)
        self.exportAsFinal.setIcon(icon_export)
        self.exportAsInitial.setIcon(icon_export)
        self.exportAsInitial.clicked.connect(self.exportGraph)
        self.actionExportInitialSolution.triggered.connect(self.exportGraph)
        self.actionExportFinalSolution.triggered.connect(self.exportGraph)
        self.exportAsFinal.clicked.connect(self.exportGraph)
        
        
        icon_undo = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\undo.png")
        self.actionUndoFinal.setIcon(icon_undo)
        self.actionUndoInitial.setIcon(icon_undo)
        self.undoFinal.setIcon(icon_undo)
        self.undoInitial.setIcon(icon_undo)
        # self.undoFinal.clicked.connect(self.undo_Final)
        # self.actionUndoFinal.triggered.connect(self.undo_Final)
        self.actionUndoInitial.triggered.connect(self.undo_Initial)
        self.undoInitial.clicked.connect(self.undo_Initial)
        
        icon_redo = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\redo.png")
        self.actionRedoFinal.setIcon(icon_redo)
        self.actionRedoInitial.setIcon(icon_redo)
        self.redoFinal.setIcon(icon_redo)
        self.redoInitial.setIcon(icon_redo)
        # self.redoFinal.clicked.connect(self.redo_Final)
        # self.actionRedoFinal.triggered.connect(self.redo_Final)
        self.actionRedoInitial.triggered.connect(self.redo_Initial)
        self.redoInitial.clicked.connect(self.redo_Initial)
        
        icon_clear = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\clear.png")
        self.actionClearFinalSolution.setIcon(icon_clear)
        self.actionClearInitialSolution.setIcon(icon_clear)
        self.clearFinal.setIcon(icon_clear)
        self.clearInitial.setIcon(icon_clear)
        self.actionClearInitialSolution.triggered.connect(self.clear)
        self.clearInitial.clicked.connect(self.clear)
        # self.clearFinal.clicked.connect(self.clear)
        # self.actionClearFinalSolution.triggered.connect(self.clear)
        
        icon_open = MainWindow.style().standardIcon(QtWidgets.QStyle.SP_DirOpenIcon)
        self.openData.setIcon(icon_open)
        self.actionOpenData.setIcon(icon_open)
        self.actionOpenData.triggered.connect(self.openFile)
        self.openData.clicked.connect(self.openFile)
        
        icon_kmeans = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\k_m.png")
        self.actionKMeans.setIcon(icon_kmeans)
        self.kMeans.setIcon(icon_kmeans)
        self.kMeans.clicked.connect(self.k_Means)
        self.actionKMeans.triggered.connect(self.k_Means)
        
        icon_ap = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\ap.png")
        self.actionAffinityPropagation.setIcon(icon_ap)
        self.affinityPropagation.setIcon(icon_ap)
        self.affinityPropagation.clicked.connect(self.affinityPropagationClustering)
        self.actionAffinityPropagation.triggered.connect(self.affinityPropagationClustering)
        
        icon_ms = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\m_s.png")
        self.actionMeanShift.setIcon(icon_ms)
        self.meanShift.setIcon(icon_ms)
        self.actionMeanShift.triggered.connect(self.meanShiftClustering)
        self.meanShift.clicked.connect(self.meanShiftClustering)
        
        icon_sc = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\sc.png")
        self.actionSpectralClustering.setIcon(icon_sc)
        self.spectralClustering.setIcon(icon_sc)
        self.actionSpectralClustering.triggered.connect(self.spectralClusteringMethod)
        self.spectralClustering.clicked.connect(self.spectralClusteringMethod)
        
        icon_hc = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\hc.png")
        self.actionHierarchicalClustering.setIcon(icon_hc)
        self.hierarchicalClustering.setIcon(icon_hc)
        self.actionHillClimbing.setIcon(icon_hc)
        self.hillClimbing.setIcon(icon_hc)
        self.hierarchicalClustering.clicked.connect(self.hierarchical_Clustering)
        self.actionHierarchicalClustering.triggered.connect(self.hierarchical_Clustering)
        # self.hillClimbing.clicked.connect(self.hill_climbing)
        # self.actionHillClimbing.triggered.connect(self.hill_climbing)
        

        
        icon_dbscan = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\dbscan.png")
        self.actionDBSCAN.setIcon(icon_dbscan)
        self.DBSCAN.setIcon(icon_dbscan) 
        self.DBSCAN.clicked.connect(self.dbscanClustering)
        self.actionDBSCAN.triggered.connect(self.dbscanClustering)
        
        icon_sa = QtGui.QIcon(r"d:\sedat\Desktop\151220192063_SedatAgbas_Project\Icons\sa.png")
        self.actionSimulatedAnneling.setIcon(icon_sa)
        self.simulatedAnneling.setIcon(icon_sa)
        # self.actionSimulatedAnneling.triggered.connect(self.simulated_annealing)
        # self.simulatedAnneling.clicked.connect(self.simulated_annealing)
        
        icon_exit = MainWindow.style().standardIcon(QtWidgets.QStyle.SP_DialogCloseButton)
        self.actionExit.setIcon(icon_exit)
        self.actionExit.triggered.connect(self.closeEvent)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.FinalSolution.setTitle(_translate("MainWindow", "Final Solution"))
        self.OptimizationAndClustering.setTitle(_translate("MainWindow", "Optimization and Clustering"))
        self.Heuristic.setTitle(_translate("MainWindow", "Heuristic"))
        self.Clustering.setTitle(_translate("MainWindow", "Clustering"))
        self.manuelSolution.setTitle(_translate("MainWindow", "Manuel Solution"))
        self.labelHubs.setText(_translate("MainWindow", "Hubs"))
        self.labelNodes.setText(_translate("MainWindow", "Nodes"))
        self.run.setText(_translate("MainWindow", "RUN"))
        self.infoPanel.setTitle(_translate("MainWindow", "Info Panel"))
        self.InitialSolution.setTitle(_translate("MainWindow", "Initial Solution"))
        self.results.setTitle(_translate("MainWindow", "Results"))
        self.menuFile_Menu.setTitle(_translate("MainWindow", "File Menu"))
        self.menuExportAs.setTitle(_translate("MainWindow", "Export As"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuClear.setTitle(_translate("MainWindow", "Clear"))
        self.menuUndo.setTitle(_translate("MainWindow", "Undo"))
        self.menuRedo.setTitle(_translate("MainWindow", "Redo"))
        self.menuClustering.setTitle(_translate("MainWindow", "Clustering"))
        self.menuHeuristics.setTitle(_translate("MainWindow", "Heuristics"))
        self.actionOpenData.setText(_translate("MainWindow", "&Open Data"))
        self.actionOpenData.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSaveInitialSolution.setText(_translate("MainWindow", "&Save Initial Solution"))
        self.actionSaveInitialSolution.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveFinalSolution.setText(_translate("MainWindow", "&Save Final Solution"))
        self.actionSaveFinalSolution.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionExportInitialSolution.setText(_translate("MainWindow", "&Initial Solution"))
        self.actionExportInitialSolution.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionExportFinalSolution.setText(_translate("MainWindow", "&Final Solution"))
        self.actionExportFinalSolution.setShortcut(_translate("MainWindow", "Ctrl+Shift+E"))
        self.actionExit.setText(_translate("MainWindow", "&Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Shift+F4"))
        self.actionClearInitialSolution.setText(_translate("MainWindow", "&Initial Solution"))
        self.actionClearInitialSolution.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionClearFinalSolution.setText(_translate("MainWindow", "&Final Solution"))
        self.actionClearFinalSolution.setShortcut(_translate("MainWindow", "Ctrl+Shift+L"))
        self.actionUndoInitial.setText(_translate("MainWindow", "&Initial Solution"))
        self.actionUndoInitial.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionUndoFinal.setText(_translate("MainWindow", "&Final Solution"))
        self.actionUndoFinal.setShortcut(_translate("MainWindow", "Ctrl+Shift+Z"))
        self.actionRedoInitial.setText(_translate("MainWindow", "&Initial Solution"))
        self.actionRedoInitial.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionRedoFinal.setText(_translate("MainWindow", "&Final Solution"))
        self.actionRedoFinal.setShortcut(_translate("MainWindow", "Ctrl+Shift+Y"))
        self.actionKMeans.setText(_translate("MainWindow", "&K-Means"))
        self.actionKMeans.setShortcut(_translate("MainWindow", "Ctrl++"))
        self.actionAffinityPropagation.setText(_translate("MainWindow", "&Affinity Propagation"))
        self.actionAffinityPropagation.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.actionMeanShift.setText(_translate("MainWindow", "&Mean-Shift"))
        self.actionMeanShift.setShortcut(_translate("MainWindow", "Ctrl+M"))
        self.actionSpectralClustering.setText(_translate("MainWindow", "&Spectral Clustering"))
        self.actionSpectralClustering.setShortcut(_translate("MainWindow", "Shift+S"))
        self.actionHierarchicalClustering.setText(_translate("MainWindow", "&Hierarchical Clustering"))
        self.actionHierarchicalClustering.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionDBSCAN.setText(_translate("MainWindow", "&DBSCAN"))
        self.actionDBSCAN.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionHillClimbing.setText(_translate("MainWindow", "&Hill Climbing"))
        self.actionHillClimbing.setShortcut(_translate("MainWindow", "Shift+H"))
        self.actionSimulatedAnneling.setText(_translate("MainWindow", "&Simulated Anneling"))
        self.actionSimulatedAnneling.setShortcut(_translate("MainWindow", "Ctrl+B"))

    def __enableInitial__(self):
        self.actionClearInitialSolution.setEnabled(True)
        self.actionKMeans.setEnabled(True)
        self.actionAffinityPropagation.setEnabled(True)
        self.actionMeanShift.setEnabled(True)
        self.actionSpectralClustering.setEnabled(True)
        self.actionHierarchicalClustering.setEnabled(True)
        self.actionDBSCAN.setEnabled(True)
        self.actionAffinityPropagation.setEnabled(True)
            
        self.clearInitial.setEnabled(True)
        self.kMeans.setEnabled(True)
        self.affinityPropagation.setEnabled(True)
        self.meanShift.setEnabled(True)
        self.spectralClustering.setEnabled(True)
        self.hierarchicalClustering.setEnabled(True)
        self.DBSCAN.setEnabled(True)
        
        self.actionSaveInitialSolution.setEnabled(True)
        self.actionExportInitialSolution.setEnabled(True)
        self.saveInitial.setEnabled(True)
        self.exportAsInitial.setEnabled(True)
        self.undoInitial.setEnabled(True)
        self.actionUndoInitial.setEnabled(True)
        
    def __enableFinal__(self):
        self.actionSaveFinalSolution.setEnabled(True)
        self.actionExportFinalSolution.setEnabled(True)
        self.actionClearFinalSolution.setEnabled(True)
        self.saveFinal.setEnabled(True)
        self.exportAsFinal.setEnabled(True)
        self.clearFinal.setEnabled(True)
        self.undoFinal.setEnabled(True)
        
    def __disableInitial__(self):
        self.actionSaveInitialSolution.setEnabled(False)
        self.actionExportInitialSolution.setEnabled(False)
        self.actionClearInitialSolution.setEnabled(False)
        self.actionKMeans.setEnabled(False)
        self.actionAffinityPropagation.setEnabled(False)
        self.actionMeanShift.setEnabled(False)
        self.actionSpectralClustering.setEnabled(False)
        self.actionHierarchicalClustering.setEnabled(False)
        self.actionDBSCAN.setEnabled(False)
        self.actionHillClimbing.setEnabled(False)
        self.actionSimulatedAnneling.setEnabled(False)
        self.actionAffinityPropagation.setEnabled(False)
            
        self.saveInitial.setEnabled(False)
        self.exportAsInitial.setEnabled(False)
        self.clearInitial.setEnabled(False)
        self.kMeans.setEnabled(False)
        self.affinityPropagation.setEnabled(False)
        self.meanShift.setEnabled(False)
        self.spectralClustering.setEnabled(False)
        self.hierarchicalClustering.setEnabled(False)
        self.DBSCAN.setEnabled(False)
        self.hillClimbing.setEnabled(False)
        self.simulatedAnneling.setEnabled(False)
            
    def __disableFinal__(self):
        self.actionSaveFinalSolution.setEnabled(False)
        self.actionExportFinalSolution.setEnabled(False)
        self.actionClearFinalSolution.setEnabled(False)
        self.saveFinal.setEnabled(False)
        self.exportAsFinal.setEnabled(False)
        self.clearFinal.setEnabled(False)
        
    def __enableHeuristic__(self):
        self.saveFinal.setEnabled(True)
        self.actionSaveFinalSolution(True)
        self.actionExportFinalSolution.setEnabled(True)
        self.actionClearFinalSolution.setEnabled(True)